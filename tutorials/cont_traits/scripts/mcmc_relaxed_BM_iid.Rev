################################################################################
#
# RevBayes Example: Bayesian inference of rates of evolution under a
#                   relaxed-rate (iid) Brownian-motion model
#
#
# authors: Michael R. May and Sebastian HÃ¶hna
#
################################################################################

#######################
# Reading in the Data #
#######################

### Select the trait to analyze
trait <- 1

### Read in the trees
T <- readTrees("data/primates_tree.nex")[1]
ntips     <- T.ntips()
nbranches <- 2 * ntips - 2

### Read in the character data
data <- readContinuousCharacterData("data/primates_cont_traits.nex")
data.excludeAll()
data.includeCharacter( trait )

# Create some vector for the moves and monitors of this analysis
moves    = VectorMoves()
monitors = VectorMonitors()

##########################
# Specify the tree model #
##########################

tree <- T

##########################
# Specify the rate model #
##########################

# specify the rate at the root
sigma2_mean ~ dnLoguniform(1e-5, 1e-1)
moves.append( mvScale(sigma2_mean, weight=1.0) )

# specify the prior on the magnitude of rate shifts
sigma2_sd <- 0.578*2
sigma2_sd ~ dnExp( 1.0 / (0.578*2) )
moves.append( mvScale(sigma2_sd, weight=1.0) )

# specify the branch-specific rates
for (i in nbranches:1) {

    # draw the rate multiplier from a mixture distribution
    branch_rates[i] ~ dnLognormal( ln(sigma2_mean), sigma2_sd )

    # include proposals on the rates
    moves.append( mvScale(branch_rates[i], weight=1) )

}

moves.append( mvShrinkExpand(branch_rates, sigma2_sd, weight=2) )
#moves.append( mvShrinkExpand(branch_rates, weight=2) )
up_down_move = mvUpDownScale( weight=5 )
up_down_move.addVariable( sigma2_mean, up=TRUE )
up_down_move.addVariable( branch_rates, up=TRUE )
moves.append( up_down_move )


##########################
# Specify the BM process #
##########################

X ~ dnPhyloBrownianREML(tree, branchRates=branch_rates^0.5)
X.clamp(data)



#############
# The Model #
#############

mymodel = model(sigma2_mean)

### set up the monitors that will output parameter values to file and screen
monitors.append( mnModel(filename="output/relaxed_BM_iid.log", printgen=10) )
monitors.append( mnScreen(printgen=100, sigma2_mean) )
monitors.append( mnExtNewick(filename="output/relaxed_BM_iid.trees", isNodeParameter=TRUE, printgen=10, separator=TAB, tree=tree, branch_rates) )



################
# The Analysis #
################

### workspace mcmc ###
mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")


### run the MCMC ###
mymcmc.burnin(generations=1000, tuningInterval=100)
mymcmc.run(generations=10000, tuningInterval=100)

## create the annotated tree
treetrace = readTreeTrace("output/relaxed_BM_iid.trees")
map_tree = mapTree(treetrace,"output/relaxed_BM_MAP_iid.tre")


## quit ##
q()
